create table db_local.oauth_access_token(
  token_id          VARCHAR(255),
  token             varbinary(4096),
  authentication_id VARCHAR(255),
  user_name         VARCHAR(255),
  client_id         VARCHAR(255),
  authentication    varbinary(4096),
  refresh_token VARCHAR(255)
);

create table db_local.oauth_refresh_token(
  token_id        VARCHAR(255),
  token           varbinary(4096),
  authentication  varbinary(4096)
);

create table db_local.oauth_code(
  code            VARCHAR(255),
  authentication  varbinary(4096)
);

create table db_local.oauth_approvals(
  userId         VARCHAR(255),
  clientId       VARCHAR(255),
  scope          VARCHAR(255),
  status         VARCHAR(10),
  expiresAt      TIMESTAMP,
  lastModifiedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

create table db_local.ClientDetails(
  appId                  VARCHAR(255) PRIMARY KEY,
  resourceIds            VARCHAR(255),
  appSecret              VARCHAR(255),
  scope                  VARCHAR(255),
  grantTypes             VARCHAR(255),
  redirectUrl            VARCHAR(255),
  authorities            VARCHAR(255),
  access_token_validity  INTEGER,
  refresh_token_validity INTEGER,
  additionalInformation  VARCHAR(4096),
  autoApproveScopes      VARCHAR(255)
);


create index oauth_access_token_id on db_local.oauth_access_token(token_id);
create index oauth_refresh_token_id on db_local.oauth_access_token(token_id);


##############CLIENT CREDENTIAL TABLES

create table db_local.oauth_client_details(
  client_id               VARCHAR(256) PRIMARY KEY,
  resource_ids            VARCHAR(256),
  client_secret           VARCHAR(256),
  scope                   VARCHAR(256),
  authorized_grant_types  VARCHAR(256),
  web_server_redirect_uri VARCHAR(256),
  authorities             VARCHAR(256),
  access_token_validity   INTEGER,
  refresh_token_validity  INTEGER,
  additional_information  VARCHAR(4096),
  autoapprove             VARCHAR(256)
);

create table db_local.oauth_client_token(
  token_id          VARCHAR(255),
  token             varbinary(4096),
  authentication_id VARCHAR(255),
  user_name         VARCHAR(255),
  client_id         VARCHAR(255)
);


CREATE TABLE db_local.user_role (
  user_id bigint NOT NULL,
  role_id bigint NOT NULL
);


-- BASIC AUTH with token time declarationuser_role
-- ACCESS TOKEN VALIDITY = 300 SECOND
-- REFRESH TOKEN VALIDITY = 1800 SECOND
-- insert client details [clientId = test & clientSecret = temp]
INSERT INTO db_local.oauth_client_details
(client_id, client_secret, scope, authorized_grant_types,
authorities, access_token_validity, refresh_token_validity)
VALUES ('test', '$2a$10$qgfrPSuoOvcoTYW1oka1r.XuQ67t9tt6erpZ4pa3/rx4Np0EF.fB6',
'read,write', 'password,refresh_token,client_credentials,authorization_code',
'ROLE_TRUSTED_CLIENT', 300, 1800);

